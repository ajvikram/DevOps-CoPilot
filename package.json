{
  "name": "devops-copilot",
  "displayName": "DevOps-CoPilot",
  "description": "This is VS Code extension based on GEN AI, it provides devops copilot features to help dev and ops, integration with Azure OpenAI, OpenAI, Git etc.",
  "version": "0.0.1",
  "publisher": "ajvikram",
  "icon": "resources/extensionIcon.png",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/ajvikram/DevOps-CoPilot.git"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "azureopenai",
    "openai",
    "gpt",
    "copilot",
    "ai",
    "devops",
    "gitreviewcode",
    "explain ",
    "refactor",
    "Vulnerability",
    "Vulnerability",
    "recommendations"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "devops-copilot.ask",
        "title": "Ask DevOps-CoPilot"
      },
      {
        "command": "devops-copilot.explain",
        "title": "DevOps-CoPilot: Explain selection"
      },
      {
        "command": "devops-copilot.refactor",
        "title": "DevOps-CoPilot: Refactor selection"
      },
      {
        "command": "devops-copilot.findProblems",
        "title": "DevOps-CoPilot: Find problems"
      },
      {
        "command": "devops-copilot.optimize",
        "title": "DevOps-CoPilot: Optimize selection"
      },
      {
        "command": "devops-copilot.documentation",
        "title": "DevOps-CoPilot: Write documentation"
      },
      {
        "command": "devops-copilot.resetSession",
        "title": "DevOps-CoPilot: Reset OpenAI API session"
      },
      {
        "command": "devops-copilot.gitReview",
        "title": "DevOps-CoPilot: Code Review with Git Changes"
      },
      {
        "command": "devops-copilot.feedbackView",
        "title": "DevOps-CoPilot: Feedback metrices/report"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "devops-copilot.ask",
          "when": "editorTextFocus",
          "group": "devops-copilot-menu-group@1"
        },
        {
          "command": "devops-copilot.explain",
          "when": "editorHasSelection",
          "group": "devops-copilot-menu-group@2"
        },
        {
          "command": "devops-copilot.refactor",
          "when": "editorHasSelection",
          "group": "devops-copilot-menu-group@3"
        },
        {
          "command": "devops-copilot.findProblems",
          "when": "editorHasSelection",
          "group": "devops-copilot-menu-group@4"
        },
        {
          "command": "devops-copilot.optimize",
          "when": "editorHasSelection",
          "group": "devops-copilot-menu-group@5"
        },
        {
          "command": "devops-copilot.documentation",
          "when": "editorHasSelection",
          "group": "devops-copilot-menu-group@6"
        }
      ],
      "commandPalette": [
        {
          "command": "devops-copilot.ask"
        },
        {
          "command": "devops-copilot.explain",
          "when": "editorHasSelection"
        },
        {
          "command": "devops-copilot.refactor",
          "when": "editorHasSelection"
        },
        {
          "command": "devops-copilot.findProblems",
          "when": "editorHasSelection"
        },
        {
          "command": "devops-copilot.optimize",
          "when": "editorHasSelection"
        },
        {
          "command": "devops-copilot.documentation",
          "when": "editorHasSelection"
        },
        {
          "command": "devops-copilot.resetSession"
        },
        {
          "command": "devops-copilot.gitReview"
        },
        {
          "command": "devops-copilot.feedbackView"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "devops-copilot",
          "title": "DevOps-CoPilot",
          "icon": "resources/icon.png"
        }
      ]
    },
    "views": {
      "devops-copilot": [
        {
          "type": "webview",
          "id": "devops-copilot.chatView",
          "name": "DevOps-CoPilot"
        }
      ]
    },
    "configuration": {
      "title": "DevOps-CoPilot",
      "type": "object",
      "properties": {
        "devops-copilot.provider": {
          "type": "string",
          "enum": [
            "openai",
            "azure",
            "local"
          ],
          "default": "openai",
          "description": "Which provider to use",
          "order": 0
        },
        "devops-copilot.apiKey": {
          "type": "string",
          "markdownDescription": "API key from [OpenAI](https://platform.openai.com/account/api-keys) or Azure OpenAI",
          "order": 1
        },
        "devops-copilot.azureEndpoint": {
          "type": "string",
          "markdownDescription": "Azure OpenAI Service Endpoint",
          "order": 2
        },
        "devops-copilot.azureDeploymentName": {
          "type": "string",
          "markdownDescription": "Azure OpenAI Deployment name, based on OpenAI model deployed on Azure",
          "order": 3
        },
        "devops-copilot.model": {
          "type": "string",
          "enum": [
            "llama2",
            "mistral",
            "gpt-3.5-turbo",
            "gpt-3.5-turbo-16k",
            "gpt-3.5-turbo-16k-0613",
            "gpt-3.5-turbo-instruct",
            "gpt-4"
          ],
          "default": "gpt-3.5-turbo",
          "description": "Which model to use",
          "order": 4
        },
        "devops-copilot.maxTokens": {
          "type": "number",
          "default": 1024,
          "description": "Maximum number of tokens inside response per request",
          "order": 5
        },
        "devops-copilot.temperature": {
          "type": "number",
          "default": 0.5,
          "description": "Temperature to use for the GPT3 (between 0 (conservative) and 1 (creative))",
          "order": 6
        },
        "devops-copilot.pasteOnClick": {
          "type": "boolean",
          "default": true,
          "description": "Paste the code from a codeblock inside the response into the editor when you click on it",
          "order": 7
        },
        "devops-copilot.promptPrefix.explain": {
          "type": "string",
          "default": "Explain what this code does: ",
          "description": "The prompt prefix used for explaining the selected code",
          "order": 8
        },
        "devops-copilot.promptPrefix.refactor": {
          "type": "string",
          "default": "Refactor this code and then explain what's changed: ",
          "description": "The prompt prefix used for refactoring the selected code",
          "order": 9
        },
        "devops-copilot.promptPrefix.findProblems": {
          "type": "string",
          "default": "Find problems and vulnerability with the following code, fix them and explain what was wrong (Do not change anything else, if there are no problems say so): ",
          "description": "The prompt prefix used for finding problems in the selected code",
          "order": 10
        },
        "devops-copilot.promptPrefix.optimize": {
          "type": "string",
          "default": "Optimize the following code if there is anything to improve, if not say so: ",
          "description": "The prompt prefix used for optimizing the selected code",
          "order": 11
        },
        "devops-copilot.promptPrefix.documentation": {
          "type": "string",
          "default": "Write documentation for the following code: ",
          "description": "The prompt prefix used for writing documentation for the selected code",
          "order": 12
        },
        "devops-copilot.selectedInsideCodeblock": {
          "type": "boolean",
          "default": true,
          "description": "Append selected code as a codeblock (```...code...```) instead of plain text",
          "order": 13
        },
        "gitReview.gitPath": {
          "type": "string",
          "default": "",
          "description": "Path to git project",
          "order": 14
        },
        "genai.feedbackPath": {
          "type": "string",
          "default": "",
          "description": "Path to store feedback",
          "order": 15
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.85.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.54.0",
    "typescript": "^5.3.2",
    "ts-loader": "^9.5.1",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8"
  },
  "dependencies": {
    "@azure/openai": "^1.0.0-beta.8",
    "openai": "^4.20.1",
    "simple-git": "^3.21.0"
  }
}